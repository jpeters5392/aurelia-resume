{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","services/certifications.js","services/experience.js","services/technology.js","utilities/sorters.js","resources/value-converters/employerValueConverter.js","screens/certifications/certifications.js","screens/experience/experience.js","screens/technologies/technologies.js","utilities/groupers.js","resources/value-converters/categoryValueConverter.js"],"names":["App","message","configureRouter","config","router","title","map","route","redirect","moduleId","nav","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","CertificationsService","inject","httpClient","getCertifications","fetch","response","json","WorkExperienceService","getWorkExperience","TechnologyService","getTechnologies","sortByBeginDate","item1","item2","item1Dates","beginDate","split","number","parseInt","item2Dates","EmployerValueConverter","toView","value","Object","keys","key","name","titles","Certifications","certificationsService","processResults","certifications","sortedCertifications","sort","canActivate","Experience","workExperienceService","workExperience","sortedWorkExperience","Technologies","technologyService","technologies","categories","groupByProperty","items","forEach","item","push","CategoryValueConverter"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 'Hello World!';\n  }\n\n  configureRouter(config, router){\n    config.title = 'Resume';\n    config.map([\n      { route: '', redirect: 'experience'},\n      { route: 'experience', moduleId: 'screens/experience/experience', nav: true, title: 'Work Experience'},\n      { route: 'certifications', moduleId: 'screens/certifications/certifications', nav: true, title: 'Professional Certifications'},\n      { route: 'technologies', moduleId: 'screens/technologies/technologies', nav:true, title: 'Technologies'},\n    ]);\n\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import 'whatwg-fetch';\nimport { HttpClient } from 'aurelia-fetch-client';\n\nexport class CertificationsService {\n    static inject() { return [ HttpClient ]; }\n    constructor(httpClient) {\n        this.httpClient = httpClient;\n    }\n\n    getCertifications() {\n        return this.httpClient.fetch('http://localhost:3000/certification')\n            .then((response) => response.json());\n    }\n}\n","import 'whatwg-fetch';\nimport { HttpClient } from 'aurelia-fetch-client';\n\nexport class WorkExperienceService {\n    static inject() { return [ HttpClient ]; }\n    constructor(httpClient) {\n        this.httpClient = httpClient;\n    }\n\n    getWorkExperience() {\n        return this.httpClient.fetch('http://localhost:3000/experience')\n            .then((response) => response.json());\n    }\n}\n","import 'whatwg-fetch';\nimport { HttpClient } from 'aurelia-fetch-client';\n\nexport class TechnologyService {\n    static inject() { return [ HttpClient ]; }\n    constructor(httpClient) {\n        this.httpClient = httpClient;\n    }\n\n    getTechnologies() {\n        return this.httpClient.fetch('http://localhost:3000/technology')\n            .then((response) => response.json());\n    }\n}\n","export function sortByBeginDate(item1, item2) {\n    const item1Dates = item1.beginDate.split('/').map((number) => parseInt(number, 10));\n    const item2Dates = item2.beginDate.split('/').map((number) => parseInt(number, 10));\n    // check if the year is older or newer\n    if (item1Dates[1] < item2Dates[1]) {\n        return 1;\n    } else if (item1Dates[1] > item2Dates[1]) {\n        return -1;\n    }\n\n    // if the years are the same then check the months\n    if (item1Dates[0] < item2Dates[0]) {\n        return 1;\n    } else if (item1Dates[0] > item2Dates[0]) {\n        return -1;\n    }\n\n    // keep them as-is\n    return 0;\n}","export class EmployerValueConverter {\n    toView(value) {\n        return Object.keys(value).map((key) => {\n            return {\n                name: key,\n                titles: value[key],\n            };\n        });\n    }\n}","import { CertificationsService } from '../../services/certifications';\nimport { sortByBeginDate } from '../../utilities/sorters';\n\nexport class Certifications {\n    static inject() { return [ CertificationsService ]; }\n    constructor(certificationsService) {\n        this.certificationsService = certificationsService;\n        this.certifications = [];\n    }\n\n    processResults = (certifications) => {\n        const sortedCertifications = certifications.sort(sortByBeginDate);\n        this.certifications = sortedCertifications;\n    }\n\n    canActivate() {\n        return this.certificationsService.getCertifications().then(this.processResults);\n    }\n}","import { WorkExperienceService } from '../../services/experience';\nimport { sortByBeginDate } from '../../utilities/sorters';\nimport { groupByProperty } from '../../utilities/groupers';\n\nexport class Experience {\n    static inject() { return [ WorkExperienceService ]; }\n    constructor(workExperienceService) {\n        this.workExperienceService = workExperienceService;\n        this.workExperience = {};\n    }\n\n    processResults = (workExperience) => {\n        const sortedWorkExperience = workExperience.sort(sortByBeginDate);\n        this.workExperience = groupByProperty(sortedWorkExperience, 'employer');\n    }\n\n    canActivate() {\n        return this.workExperienceService.getWorkExperience().then(this.processResults);\n    }\n}\n","import { TechnologyService } from '../../services/technology';\nimport { sortByBeginDate } from '../../utilities/sorters';\nimport { groupByProperty } from '../../utilities/groupers';\n\nexport class Technologies {\n    static inject() { return [ TechnologyService ]; }\n    constructor(technologyService) {\n        this.technologyService = technologyService;\n        this.categories = {};\n    }\n\n    processResults = (technologies) => {\n        this.categories = groupByProperty(technologies, 'category');\n    }\n\n    canActivate() {\n        return this.technologyService.getTechnologies().then(this.processResults);\n    }\n}","export function groupByProperty(items, key) {\n    const categories = {};\n    items.forEach((item) => {\n        if (categories[item[key]]) {\n            const items = categories[item[key]];\n            items.push(item);\n        } else {\n            categories[item[key]] = [ item ];\n        }\n    });\n    return categories;\n}","export class CategoryValueConverter {\n    toView(value) {\n        return Object.keys(value).map((key) => {\n            return {\n                name: key,\n                technologies: value[key],\n            };\n        });\n    }\n}"],"sourceRoot":"../src"}